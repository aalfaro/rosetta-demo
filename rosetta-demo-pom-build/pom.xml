<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<modelVersion>4.0.0</modelVersion>
	<artifactId>rosetta-demo-pom-build</artifactId>
	<packaging>pom</packaging>
	<name>ROSETTA DEMO Build POM</name>
	<inceptionYear>2012</inceptionYear>

	<parent>
		<groupId>com.rosetta.demo</groupId>
		<artifactId>rosetta-demo-root</artifactId>
		<version>0.0.1-SNAPSHOT</version>
		<relativePath>../pom.xml</relativePath>
	</parent>

	<properties>
		<asm.bundle.version>3.3_2</asm.bundle.version>
		<checkstyle-plugin-version>2.9</checkstyle-plugin-version>
		<cobertura-maven-plugin-version>2.5.1</cobertura-maven-plugin-version>
		<commons.pool.bundle.version>1.5.4_1</commons.pool.bundle.version>
		<ehcache.jar.version>2.4.5</ehcache.jar.version>
		<hibernate.version>3.6.7.Final</hibernate.version>
		<hsqldb.version>2.2.8</hsqldb.version>
		<jaxbimpl.bundle.version>2.1.13_2</jaxbimpl.bundle.version> <!-- CXF 2.4.1 uses 2.1.13_2 -->
		<jetty.version>7.4.2.v20110526</jetty.version>
		<jxr-plugin-version>2.3</jxr-plugin-version>
		<liquibase-core.version>2.0.2</liquibase-core.version>
		<liquibase-maven-plugin.version>2.0.2</liquibase-maven-plugin.version>
		<log4j.version>1.2.15</log4j.version>
		<maven.build.timestamp.format>yyyyMMdd_HHmm</maven.build.timestamp.format>
		<maven-assembly-plugin-version>2.3</maven-assembly-plugin-version>
		<maven-compiler-plugin-version>2.5.1</maven-compiler-plugin-version>
		<maven-dependency-plugin-version>2.5.1</maven-dependency-plugin-version>
		<maven-failsafe-plugin-version>2.12.3</maven-failsafe-plugin-version>
		<maven-jar-plugin-version>2.4</maven-jar-plugin-version>
		<maven-release-plugin-version>2.3.2</maven-release-plugin-version>
		<maven-remote-resources-plugin-version>1.3</maven-remote-resources-plugin-version>
		<maven-resources-plugin-version>2.6</maven-resources-plugin-version>
		<maven-surefire-report-plugin-version>2.12.3</maven-surefire-report-plugin-version>
		<maven-surefire-plugin-version>2.12.3</maven-surefire-plugin-version>
		<mysql-connector-java.version>5.1.6</mysql-connector-java.version>
		<neethi.bundle.version>3.0.0</neethi.bundle.version>
		<remote.service.admin.interfaces.version>1.0.0</remote.service.admin.interfaces.version>
		<servicemix.specs.version>1.8.0</servicemix.specs.version>
		<servlet.version>3.0</servlet.version>
		<slf4j.version>1.5.0</slf4j.version>
		<spring.version>3.0.6.RELEASE</spring.version>
		<spring.osgi.version>1.2.1</spring.osgi.version>
		<woodstox.bundle.version>4.1.1</woodstox.bundle.version> <!-- CXF 2.4.1 uses 4.1.1 -->
		<wsdl4j.bundle.version>1.6.2_5</wsdl4j.bundle.version> <!-- CXF uses 1.6.2 -->
		<xmlschema.bundle.version>2.0</xmlschema.bundle.version>
		<xmlresolver.bundle.version>1.2_4</xmlresolver.bundle.version>
		<xmlsec.bundle.version>1.4.5_1</xmlsec.bundle.version>
		<zookeeper.version>3.2.1</zookeeper.version>
	</properties>

	<build>
		<defaultGoal>install</defaultGoal>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.felix</groupId>
					<artifactId>maven-bundle-plugin</artifactId>
					<version>${felix.plugin.version}</version>
					<extensions>true</extensions>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-assembly-plugin</artifactId>
					<version>${maven-assembly-plugin-version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>${maven-surefire-plugin-version}</version>
					<configuration>
						<argLine>-XX:MaxPermSize=256m -Djava.awt.headless=true</argLine>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-failsafe-plugin</artifactId>
					<configuration>
						<argLine>-Djava.awt.headless=true</argLine>
					</configuration>
					<version>${maven-failsafe-plugin-version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>${maven-compiler-plugin-version}</version>
					<configuration>
						<source>1.6</source>
						<target>1.6</target>
						<maxmem>512M</maxmem>
						<!-- Change from false to true to avoid the need of MAVEN_OPTS, if 
							we don't need a performance test is ok -->
						<fork>true</fork>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-antrun-plugin</artifactId>
					<version>1.6</version>
					<dependencies>
						<dependency>
							<groupId>ant</groupId>
							<artifactId>ant-trax</artifactId>
							<version>1.6.5</version>
						</dependency>
					</dependencies>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<version>${maven-resources-plugin-version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-dependency-plugin</artifactId>
					<version>${maven-dependency-plugin-version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>${maven-jar-plugin-version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-release-plugin</artifactId>
					<version>${maven-release-plugin-version}</version>
					<configuration>
						<tagNameFormat>@{project.groupId}-@{project.artifactId}-@{project.version}</tagNameFormat>
						<preparationGoals>clean install</preparationGoals>
					</configuration>
				</plugin>
				<!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.apache.maven.plugins
										</groupId>
										<artifactId>
											maven-checkstyle-plugin
										</artifactId>
										<versionRange>
											[2.9,)
										</versionRange>
										<goals>
											<goal>checkstyle</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>

		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<inherited>true</inherited>
				<configuration>
					<!-- Change from once to always to avoid the set of more -Xmx memory, 
						if we don't need a performance test is ok -->
					<forkMode>always</forkMode>
					<reportFormat>plain</reportFormat>
					<argLine>-XX:MaxPermSize=256m -Djava.awt.headless=true</argLine>
					<excludes>
						<exclude>**/*IntegrationTest.java</exclude>
					</excludes>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<configuration>
					<argLine>-Djava.awt.headless=true</argLine>
					<includes>
						<include>**/*IntegrationTest.java</include>
					</includes>
					<argLine>-Djava.awt.headless=true</argLine>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>${checkstyle-plugin-version}</version>
				<dependencies>
					<dependency>
						<groupId>com.rosetta.demo</groupId>
						<artifactId>dev-support</artifactId>
						<version>${project.version}</version>
					</dependency>
				</dependencies>
				<configuration>
					<configLocation>checkstyle.xml</configLocation>
					<suppressionsLocation>suppressions.xml</suppressionsLocation>
					<includeTestSourceDirectory>true</includeTestSourceDirectory>
					<failsOnError>false</failsOnError>
					<consoleOutput>false</consoleOutput>
					<encoding>utf-8</encoding>
				</configuration>
				<executions>
					<execution>
						<id>checkstyle-code-verification</id>
						<phase>compile</phase>
						<goals>
							<goal>checkstyle</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>cobertura-maven-plugin</artifactId>
				<version>${cobertura-maven-plugin-version}</version>
				<configuration>
					<formats>
						<format>html</format>
						<format>xml</format>
					</formats>
				</configuration>
				<!-- <executions> <execution> <phase>package</phase> <goals> <goal>cobertura</goal> 
					</goals> </execution> </executions> -->
			</plugin>
		</plugins>
	</build>

	<reporting>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-report-plugin</artifactId>
				<version>${maven-surefire-report-plugin-version}</version>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>cobertura-maven-plugin</artifactId>
				<version>${cobertura-maven-plugin-version}</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>${checkstyle-plugin-version}</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jxr-plugin</artifactId>
				<version>${jxr-plugin-version}</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>2.8</version>
				<configuration>
					<maxmemory>512M</maxmemory>
					<skip>true</skip>
				</configuration>
			</plugin>
		</plugins>
	</reporting>

	<dependencies>
		<dependency>
			<artifactId>junit</artifactId>
			<groupId>junit</groupId>
			<version>4.9</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.jmock</groupId>
			<artifactId>jmock</artifactId>
			<version>2.5.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.jmock</groupId>
			<artifactId>jmock-junit4</artifactId>
			<version>2.5.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.jmock</groupId>
			<artifactId>jmock-legacy</artifactId>
			<version>2.5.1</version>
			<scope>test</scope>
		</dependency>

		<!-- Day provided dependencies -->
		<dependency>
			<artifactId>commons-codec</artifactId>
			<groupId>commons-codec</groupId>
			<version>1.4</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<artifactId>commons-collections</artifactId>
			<groupId>commons-collections</groupId>
			<version>3.2.1</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<artifactId>commons-io</artifactId>
			<groupId>commons-io</groupId>
			<version>1.4</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<artifactId>commons-lang</artifactId>
			<groupId>commons-lang</groupId>
			<version>2.4</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<artifactId>commons-logging</artifactId>
			<groupId>commons-logging</groupId>
			<version>1.1.1</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.6.1</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>1.6.1</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.16</version>
			<scope>provided</scope>
		</dependency>
	</dependencies>

	<profiles>
		<profile>
			<id>ci</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>cobertura-maven-plugin</artifactId>
						<version>${cobertura-maven-plugin-version}</version>
						<configuration>
							<formats>
								<format>html</format>
								<format>xml</format>
							</formats>
						</configuration>
						<executions>
							<execution>
								<phase>package</phase>
								<goals>
									<goal>cobertura</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

</project>
